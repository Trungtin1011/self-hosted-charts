apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tasks-md.fullname" . }}
  labels:
    {{- include "tasks-md.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "tasks-md.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "tasks-md.labels" . | nindent 8 }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "tasks-md.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: PUID
            value: "1000"
          - name: PGID
            value: "1000"
          - name: TASKS_DIR
            value: "/data/tasks"
          - name: CONFIG_DIR
            value: "/config"
          {{- with .Values.taskboard.title }}
          - name: TITLE
            value: {{ . | quote }}
          {{- end }}
          {{- with .Values.taskboard.clean_interval }}
          - name: LOCAL_IMAGES_CLEANUP_INTERVAL
            value: {{ . | quote }}
          {{- end }}
          {{- with .Values.ingress.path }}
          - name: BASE_PATH
            value: {{ . | quote }}
          {{- end }}
          {{- with .Values.extraEnv }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.ingress.path }}
              port: http
          readinessProbe:
            httpGet:
              path: {{ .Values.ingress.path }}
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
              subPath: tasks
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ template "tasks-md.fullname" . }}-data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
